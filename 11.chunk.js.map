{"version":3,"sources":["C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.html","C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.scss","C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.ts","C:/Users/brenos/Videos/mob/src/app/allocation/allocation.module.ts","C:/Users/brenos/Videos/mob/src/app/allocation/allocation.routing.ts"],"names":[],"mappings":"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","file":"11.chunk.js","sourcesContent":["module.exports = \"<mat-card class=\\\"allocation-stepper\\\">\\r\\n  <mat-horizontal-stepper [linear]=\\\"isLinear\\\" fxFlex>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Formulário</ng-template>\\r\\n      <form fxLayout=\\\"column\\\">\\r\\n        <div fxFlex=\\\"80\\\" fxLayout=\\\"column\\\" fxFlexOffset=\\\"5\\\">\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field fxFlex=\\\"50\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Setor Requisitante\\\" name=\\\"requesterSector\\\" [(ngModel)]=\\\"model.requesterSector\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"15\\\" fxFlexOffset=\\\"5\\\">\\r\\n              <input matInput placeholder=\\\"Data da Solicitação\\\" name=\\\"date\\\" [(ngModel)]=\\\"model.requestDate\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Destino\\\" name=\\\"destination\\\" [(ngModel)]=\\\"model.destination\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <textarea matInput placeholder=\\\"Objetivo\\\" name=\\\"purpose\\\" [(ngModel)]=\\\"model.purpose\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field fxFlex=\\\"50\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Nome\\\" name=\\\"name\\\" [(ngModel)]=\\\"model.name\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"15\\\" fxFlexOffset=\\\"5\\\">\\r\\n              <input matInput placeholder=\\\"Telefone\\\" name=\\\"phone\\\" [(ngModel)]=\\\"model.phone\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field fxFlex=\\\"32\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Data Ida\\\" name=\\\"travelDate\\\" [(ngModel)]=\\\"model.travelDate\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"5\\\">\\r\\n              <input matInput placeholder=\\\"Hora da Saída\\\"  name=\\\"departureHour\\\" [(ngModel)]=\\\"model.departureHour\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field fxFlex=\\\"32\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Regresso Provável\\\" name=\\\"returnDate\\\" [(ngModel)]=\\\"model.returnDate\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"5\\\">\\r\\n              <input matInput placeholder=\\\"Hora\\\" name=\\\"returnHour\\\" [(ngModel)]=\\\"model.returnHour\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <h3 fxFlex=\\\"20\\\" fxFlexOffset=\\\"15\\\">Local de Saída:</h3>\\r\\n            <mat-checkbox fxFlex=\\\"20\\\">Reitoria/UFCG</mat-checkbox>\\r\\n            <mat-checkbox fxFlex=\\\"20\\\">Residência</mat-checkbox>\\r\\n            <mat-checkbox fxFlex=\\\"20\\\">Outros*</mat-checkbox>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <textarea matInput placeholder=\\\"\\\" name=\\\"travelOrigin\\\" [(ngModel)]=\\\"model.travelOrigin\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Horário de chegada do voo/ônibus\\\" name=\\\"arrivalTime\\\" [(ngModel)]=\\\"model.arrivalTime\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field fxFlex=\\\"32\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Número do voo\\\" name=\\\"flightNumber\\\" [(ngModel)]=\\\"model.flightNumber\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"5\\\">\\r\\n              <input matInput placeholder=\\\"Empresa\\\" name=\\\"airCompany\\\" [(ngModel)]=\\\"model.airCompany\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Origem da viagem\\\" name=\\\"travelOrigin\\\" [(ngModel)]=\\\"model.travelOrigin\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Setor responsável pelas diárias do motorista\\\" name=\\\"driveSectorResponsability\\\" [(ngModel)]=\\\"model.driverSectorResponsibility\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <button mat-raised-button fxFlex=\\\"25\\\" fxFlexOffset=\\\"15\\\" (click)=\\\"updateForm(model.id)\\\">Atualizar</button>\\r\\n            <button mat-raised-button fxFlex=\\\"30\\\" fxFlexOffset=\\\"15\\\" matStepperNext color=\\\"primary\\\">Próximo</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n\\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Selecionar Veículo</ng-template>\\r\\n      <div fxLayoutAlign=\\\"space-between\\\">\\r\\n        <div *ngFor=\\\"let col of vehiclesHeader\\\" fxFlex fxLayoutAlign=\\\"center\\\">\\r\\n          <h3>{{ col }}</h3>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"availableVehicles\\\">\\r\\n        <h4>Disponíveis</h4>\\r\\n        <mat-card class=\\\"vehicle-choice\\\" *ngFor=\\\"let vehicle of availableVehicles\\\" >\\r\\n          <mat-card-content class=\\\"card-container\\\" fxLayout=\\\"column\\\" (click)=\\\"selectVehicle(vehicle.id)\\\">\\r\\n            <div fxLayoutAlign=\\\"space-between\\\">\\r\\n              <div fxFlex fxLayoutAlign=\\\"center space-between\\\" [ngClass]=\\\"{'selected-option':vehicle.id === selectedVehicle}\\\">\\r\\n                <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                  <p>{{ vehicle.vehicle }}</p>\\r\\n                </div>\\r\\n                <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                  <p>{{ vehicle.plate }}</p>\\r\\n                </div>\\r\\n                <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                  <p>{{ vehicle.brand }}</p>\\r\\n                </div>\\r\\n                <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                  <p>{{ vehicle.capacity }}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div fxFlex>\\r\\n        <div *ngIf=\\\"busyVehicles\\\">\\r\\n          <h4>Com viagens no dia</h4>\\r\\n          <mat-card class=\\\"vehicle-choice\\\">\\r\\n            <mat-card-content class=\\\"card-container\\\" fxLayout=\\\"column\\\">\\r\\n                <mat-accordion [multi]=\\\"false\\\">\\r\\n                    <mat-expansion-panel *ngFor=\\\"let vehicle of busyVehicles\\\" [ngClass]=\\\"{'selected-option':vehicle.id === selectedVehicle}\\\" (click)=\\\"selectVehicle(vehicle.id)\\\">\\r\\n                      <mat-expansion-panel-header >\\r\\n                        <mat-panel-title>\\r\\n                            <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                                <div fxFlex fxLayoutAlign=\\\"center space-between\\\">\\r\\n                                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                                    <p>{{ vehicle.vehicle }}</p>\\r\\n                                  </div>\\r\\n                                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                                    <p>{{ vehicle.plate }}</p>\\r\\n                                  </div>\\r\\n                                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                                    <p>{{ vehicle.brand }}</p>\\r\\n                                  </div>\\r\\n                                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                                    <p>{{ vehicle.capacity }}</p>\\r\\n                                  </div>\\r\\n                                </div>\\r\\n                              </div>\\r\\n                            </mat-panel-title>\\r\\n                      </mat-expansion-panel-header>\\r\\n                      \\r\\n                      Lista de Viagens\\r\\n                    </mat-expansion-panel>\\r\\n                  </mat-accordion>\\r\\n              \\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n        <button mat-raised-button matStepperPrevious color=\\\"primary\\\">Voltar</button>\\r\\n        <button mat-raised-button matStepperNext color=\\\"primary\\\">Próximo</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Selecionar Motorista</ng-template>\\r\\n      <div>\\r\\n        <div fxLayoutAlign=\\\"space-between\\\">\\r\\n          <div *ngFor=\\\"let col of driversHeader\\\" fxFlex fxLayoutAlign=\\\"center\\\">\\r\\n            <h4>{{ col }}</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"drivers\\\">\\r\\n          <mat-card *ngFor=\\\"let driver of drivers\\\" class=\\\"vehicle-choice\\\">\\r\\n            <mat-card-content class=\\\"card-container\\\" fxLayout=\\\"column\\\" (click)=\\\"selectDriver(driver.id)\\\"  [ngClass]=\\\"{'selected-option':driver.id === selectedDriver}\\\">\\r\\n              <div fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"30px\\\">\\r\\n                <div fxFlex fxLayoutAlign=\\\"center space-between\\\">\\r\\n                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                    <p>{{ driver.name }}</p>\\r\\n                  </div>\\r\\n                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                    <p>{{ driver.cpf }}</p>\\r\\n                  </div>\\r\\n                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                    <p>{{ driver.cnh }}</p>\\r\\n                  </div>\\r\\n                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                    <p>{{ driver.registration }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n        <button mat-raised-button matStepperPrevious color=\\\"primary\\\">Voltar</button>\\r\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"signup-btn\\\" (click)=\\\"confirmTravel()\\\">Confirmar</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n  </mat-horizontal-stepper>\\r\\n</mat-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.html\n// module id = ../../../../../src/app/allocation/allocation.component.html\n// module chunks = 11","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".allocation-stepper {\\n  margin-top: 5%; }\\n  .allocation-stepper button {\\n    margin-top: 30px; }\\n\\n.selected-option {\\n  background-color: #a2c0df; }\\n\\n.vehicle-choice {\\n  padding: 0;\\n  border-style: ridge; }\\n  .vehicle-choice:hover {\\n    cursor: pointer; }\\n  .vehicle-choice .img-container {\\n    height: 50px;\\n    padding: 7px 0; }\\n    .vehicle-choice .img-container img {\\n      border-radius: 50%;\\n      height: 50px;\\n      width: 50px; }\\n  .vehicle-choice p {\\n    margin: 0;\\n    padding: 24px 0;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.scss\n// module id = ../../../../../src/app/allocation/allocation.component.scss\n// module chunks = 11","import { Component, OnInit } from '@angular/core';\r\nimport { TravelService } from '../services/travel.service';\r\nimport { FormService } from '../services/form.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { VehicleService } from '../services/vehicle.service';\r\nimport { DriverService } from '../services/driver.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-allocation',\r\n  templateUrl: './allocation.component.html',\r\n  styleUrls: ['./allocation.component.scss']\r\n})\r\nexport class AllocationComponent implements OnInit {\r\n\r\n  protected model: any = {};\r\n  protected isLinear = false;\r\n  protected checked = false;\r\n  protected terminal = false;\r\n  protected id;\r\n\r\n  protected availableVehicles = [];\r\n  protected busyVehicles = [];\r\n  protected vehicles = [];\r\n  protected vehiclesHeader = ['Veículo', 'Placa', 'Marca', 'Capacidade'];\r\n\r\n  protected drivers = [];\r\n  protected driversHeader = ['Nome', 'Cpf', 'Cnh', 'Registro'];\r\n\r\n  protected selectedDriver: number;\r\n  protected selectedVehicle: number;\r\n\r\n  protected provisoryDateHour = '01/01/2018 ';\r\n\r\n\r\n  constructor(private travelService: TravelService,\r\n              private route: ActivatedRoute,\r\n              private formService: FormService,\r\n              private vehicleService: VehicleService,\r\n              private driverService: DriverService,\r\n              private snackBar: MatSnackBar,\r\n              private router: Router) {\r\n                 this.id = this.route.snapshot.params['id'];\r\n               }\r\n\r\n  ngOnInit() {\r\n     this.formService.getById(this.id).subscribe((data) => {\r\n        this.model = data;\r\n        this.model.departureHour = data.departureHour.slice(11);\r\n        this.model.returnHour = data.returnHour.slice(11);\r\n\r\n        this.vehicleService.getVehiclesWithTravels(this.model.travelDate).subscribe((data2) => {\r\n          for (const vehicleData of data2) {\r\n              this.busyVehicles.push(vehicleData);\r\n          }\r\n        });\r\n      }, error => {\r\n        console.error(error);\r\n      }\r\n    );\r\n\r\n    this.vehicleService.getAvailables(this.id).subscribe((data) => {\r\n      for (const vehicleData of data) {\r\n          this.availableVehicles.push(vehicleData);\r\n      }\r\n    });\r\n\r\n    this.vehicleService.vehiclesObs.subscribe((data) => {\r\n      for (const vehicleData of data) {\r\n          this.vehicles.push(vehicleData);\r\n      }\r\n    });\r\n\r\n    this.driverService.driversObs.subscribe((data) => {\r\n      for (const driverData of data) {\r\n          this.drivers.push(driverData);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectDriver(id: number) {\r\n    this.selectedDriver = id;\r\n  }\r\n\r\n  selectVehicle(id: number) {\r\n    this.selectedVehicle = id;\r\n  }\r\n\r\n  updateForm() {\r\n    const id = this.model.id;\r\n    const form = Object.assign({}, this.model);\r\n    form.travelDate += ' ' + form.departureHour;\r\n    form.returnDate += ' ' + form.returnHour;\r\n    form.requestDate += ' ' + form.returnHour;\r\n    form.returnHour = form.returnDate;\r\n    form.departureHour = form.travelDate;\r\n\r\n    this.formService.update(id, form).subscribe((data) => {\r\n      const snackBarRef = this.snackBar.open('Solicitação atualizada!', 'OK', { duration: 5000});\r\n      console.log(data);\r\n    }, error => {\r\n      const snackBarRef = this.snackBar.open(error.errors[0], 'ENVIAR NOVAMENTE', { duration: 5000});\r\n      console.log(error);\r\n    });\r\n  }\r\n  confirmTravel() {\r\n    const form = {\r\n      formId: +this.id,\r\n      vehicle: this.selectedVehicle,\r\n      driver: this.selectedDriver\r\n\r\n    };\r\n    this.travelService.create(form).subscribe(data => {\r\n      const snackBarRef = this.snackBar.open('Solicitação aceita e viagem confirmada!', 'OK', { duration: 5000});\r\n      this.router.navigate(['/home/travels']);\r\n    }, error => {\r\n      const snackBarRef = this.snackBar.open(error.errors[0], 'ENVIAR NOVAMENTE', { duration: 5000});\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AllocationComponent } from './allocation.component';\r\nimport { MatStepperModule } from '@angular/material';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { allocationRouting } from './allocation.routing';\r\nimport { TravelService } from '../services/travel.service';\r\nimport { FormService } from '../services/form.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { VehicleService } from '../services/vehicle.service';\r\nimport { DriverService } from '../services/driver.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatStepperModule,\r\n    SharedModule,\r\n    allocationRouting,\r\n    FormsModule\r\n  ],\r\n  declarations: [AllocationComponent],\r\n  providers: [\r\n    TravelService,\r\n    FormService,\r\n    VehicleService,\r\n    DriverService\r\n  ]\r\n})\r\nexport class AllocationModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/brenos/Videos/mob/src/app/allocation/allocation.module.ts","import { RouterModule, Routes } from '@angular/router';\r\nimport { AllocationComponent } from './allocation.component';\r\nimport { ModuleWithProviders } from '@angular/core';\r\n\r\nconst allocationRoutes: Routes = [\r\n    {\r\n        path: '', component: AllocationComponent\r\n    }\r\n];\r\n\r\nexport const allocationRouting: ModuleWithProviders = RouterModule.forChild(allocationRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/brenos/Videos/mob/src/app/allocation/allocation.routing.ts"],"sourceRoot":"webpack:///"}