{"version":3,"sources":["C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.html","C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.scss","C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.ts","C:/Users/brenos/Videos/mob/src/app/allocation/allocation.module.ts","C:/Users/brenos/Videos/mob/src/app/allocation/allocation.routing.ts"],"names":[],"mappings":"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","file":"12.chunk.js","sourcesContent":["module.exports = \"<mat-card class=\\\"allocation-stepper\\\">\\r\\n  <mat-horizontal-stepper [linear]=\\\"isLinear\\\" fxFlex>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Formulário</ng-template>\\r\\n      <form fxLayout=\\\"column\\\">\\r\\n        <div fxFlex=\\\"80\\\" fxLayout=\\\"column\\\" fxFlexOffset=\\\"5\\\">\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field fxFlex=\\\"50\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Setor Requisitante\\\" name=\\\"requesterSector\\\" [(ngModel)]=\\\"model.requesterSector\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"15\\\" fxFlexOffset=\\\"5\\\">\\r\\n              <input matInput placeholder=\\\"Data da Solicitação\\\" name=\\\"date\\\" [(ngModel)]=\\\"model.requestDate\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Destino\\\" name=\\\"destination\\\" [(ngModel)]=\\\"model.destination\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <textarea matInput placeholder=\\\"Objetivo\\\" name=\\\"purpose\\\" [(ngModel)]=\\\"model.purpose\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field fxFlex=\\\"50\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Nome\\\" name=\\\"name\\\" [(ngModel)]=\\\"model.name\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"15\\\" fxFlexOffset=\\\"5\\\">\\r\\n              <input matInput placeholder=\\\"Telefone\\\" name=\\\"phone\\\" [(ngModel)]=\\\"model.phone\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field fxFlex=\\\"32\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Data Ida\\\" name=\\\"travelDate\\\" [(ngModel)]=\\\"model.travelDate\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"5\\\">\\r\\n              <input matInput placeholder=\\\"Hora da Saída\\\"  name=\\\"departureHour\\\" [(ngModel)]=\\\"model.departureHour\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field fxFlex=\\\"32\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Regresso Provável\\\" name=\\\"returnDate\\\" [(ngModel)]=\\\"model.returnDate\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"5\\\">\\r\\n              <input matInput placeholder=\\\"Hora\\\" name=\\\"returnHour\\\" [(ngModel)]=\\\"model.returnHour\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <h3 fxFlex=\\\"20\\\" fxFlexOffset=\\\"15\\\">Local de Saída:</h3>\\r\\n            <mat-checkbox [checked]=\\\"model.departurePoint === 'Reitoria UFCG'\\\" (change)=\\\"changeDeparturePoint('Reitoria UFCG')\\\" fxFlex=\\\"20\\\">Reitoria/UFCG</mat-checkbox>\\r\\n            <mat-checkbox [checked]=\\\"model.departurePoint === 'Residência'\\\" (change)=\\\"changeDeparturePoint('Residência')\\\" fxFlex=\\\"20\\\">Residência</mat-checkbox>\\r\\n            <mat-checkbox [checked]=\\\"model.departurePoint === 'Outros'\\\"(change)=\\\"changeDeparturePoint('Outros')\\\" fxFlex=\\\"20\\\">Outros*</mat-checkbox>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <textarea matInput placeholder=\\\"\\\" name=\\\"travelOrigin\\\" [(ngModel)]=\\\"model.travelOrigin\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Horário de chegada do voo/ônibus\\\" name=\\\"arrivalTime\\\" [(ngModel)]=\\\"model.arrivalTime\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n            <mat-form-field fxFlex=\\\"32\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Número do voo\\\" name=\\\"flightNumber\\\" [(ngModel)]=\\\"model.flightNumber\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"5\\\">\\r\\n              <input matInput placeholder=\\\"Empresa\\\" name=\\\"airCompany\\\" [(ngModel)]=\\\"model.airCompany\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Origem da viagem\\\" name=\\\"travelOrigin\\\" [(ngModel)]=\\\"model.travelOrigin\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n              <input matInput placeholder=\\\"Setor responsável pelas diárias do motorista\\\" name=\\\"driveSectorResponsability\\\" [(ngModel)]=\\\"model.driverSectorResponsibility\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div>\\r\\n            <button mat-raised-button fxFlex=\\\"25\\\" fxFlexOffset=\\\"15\\\" color=\\\"primary\\\" (click)=\\\"updateForm(model.id)\\\">Atualizar</button>\\r\\n            <button mat-raised-button fxFlex=\\\"25\\\" fxFlexOffset=\\\"15\\\" color=\\\"primary\\\" (click)=\\\"removeForm(model.id)\\\">Deletar</button>\\r\\n            <button mat-raised-button fxFlex=\\\"30\\\" fxFlexOffset=\\\"15\\\" matStepperNext color=\\\"primary\\\">Próximo</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n      \\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Selecionar Veículo</ng-template>\\r\\n      <div *ngIf=\\\"availableVehicles\\\">\\r\\n        <div fxLayout=\\\"row\\\">\\r\\n          <mat-toolbar color=\\\"primary\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <span>Selecione um veículo</span>\\r\\n          </mat-toolbar>\\r\\n        </div>\\r\\n        <div fxLayoutAlign=\\\"space-between\\\">\\r\\n          <div *ngFor=\\\"let col of vehiclesHeader\\\" fxFlex fxLayoutAlign=\\\"center\\\">\\r\\n            <h4>{{ col }}</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n        <mat-card class=\\\"vehicle-choice card card-5\\\" *ngFor=\\\"let vehicle of availableVehicles\\\">\\r\\n          <mat-card-content class=\\\"card-container\\\" fxLayout=\\\"column\\\" (click)=\\\"selectVehicleAvailable(vehicle.id)\\\">\\r\\n            <div class=\\\"vehicle-card\\\" fxLayoutAlign=\\\"space-between\\\" [ngClass]=\\\"{'selected-option':vehicle.id === selectedVehicleAvailable}\\\">\\r\\n              <div fxLayoutAlign=\\\"center center\\\">\\r\\n                <mat-checkbox [checked]=\\\"vehicle.id === selectedVehicleAvailable\\\"></mat-checkbox>\\r\\n              </div>\\r\\n              <div fxFlex fxLayoutAlign=\\\"center space-between\\\">\\r\\n                <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                  <p>{{ vehicle.vehicle }}</p>\\r\\n                </div>\\r\\n                <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                  <p>{{ vehicle.plate }}</p>\\r\\n                </div>\\r\\n                <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                  <p>{{ vehicle.brand }}</p>\\r\\n                </div>\\r\\n                <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                  <p>{{ vehicle.capacity }}</p>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      <div fxFlex>\\r\\n        <div *ngIf=\\\"busyVehicles\\\">\\r\\n          <mat-card class=\\\"vehicle-choice\\\">\\r\\n            <mat-card-content class=\\\"card-container\\\" fxLayout=\\\"column\\\">\\r\\n              <mat-accordion [multi]=\\\"false\\\">\\r\\n                <mat-expansion-panel *ngFor=\\\"let vehicle of busyVehicles\\\" [ngClass]=\\\"{'selected-option':vehicle.id === selectedVehicleWithTravel}\\\" (click)=\\\"selectVehicleWithTravels(vehicle.id)\\\">\\r\\n                  <mat-expansion-panel-header (click)=\\\"showTravels(vehicle.id)\\\">\\r\\n                    <mat-panel-title>\\r\\n                      <div fxFlex=\\\"100\\\" fxLayoutAlign=\\\"space-between\\\">\\r\\n                        <div fxFlex fxLayoutAlign=\\\"center space-between\\\">\\r\\n                          <div fxLayoutAlign=\\\"center center\\\">\\r\\n                            <mat-icon>airline_seat_recline_normal</mat-icon>\\r\\n                          </div>\\r\\n                          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                            <p>{{ vehicle.vehicle }}</p>\\r\\n                          </div>\\r\\n                          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                            <p>{{ vehicle.plate }}</p>\\r\\n                          </div>\\r\\n                          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                            <p>{{ vehicle.brand }}</p>\\r\\n                          </div>\\r\\n                          <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                            <p>{{ vehicle.capacity }}</p>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </mat-panel-title>\\r\\n                  </mat-expansion-panel-header>\\r\\n                  \\r\\n                  <div fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <div fxFlex fxLayoutAlign=\\\"center\\\"><h4>Destino</h4></div>\\r\\n                    <div fxFlex fxLayoutAlign=\\\"center\\\"><h4>Motorista</h4></div>\\r\\n                    <div fxFlex fxLayoutAlign=\\\"center\\\"><h4>Retorno</h4></div>\\r\\n                  </div>\\r\\n                  <mat-card class=\\\"travels-vehicles\\\" *ngFor=\\\"let travel of travelsByVehicle\\\" (click)=\\\"selectTravel(travel, travel.id, travel.form[0])\\\">\\r\\n                    <div fxFlex fxLayoutAlign=\\\"center space-between\\\" >\\r\\n                      <mat-checkbox [checked]=\\\"travel.id === selectedTravelID\\\"></mat-checkbox>\\r\\n                      <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                        <p>{{ travel.form[0].destination }}</p>\\r\\n                      </div>\\r\\n                      <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                        <p>{{travel.driver.name}}</p>\\r\\n                      </div>\\r\\n                      <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                        <p>{{ travel.travelDate }}</p>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </mat-card>\\r\\n                </mat-expansion-panel>\\r\\n              </mat-accordion>\\r\\n              \\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n        <button mat-raised-button matStepperPrevious color=\\\"primary\\\">Voltar</button>\\r\\n        <button mat-raised-button matStepperNext color=\\\"primary\\\">Próximo</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n    <mat-step>\\r\\n      <ng-template matStepLabel>Selecionar Motorista</ng-template>\\r\\n      <div *ngIf=\\\"!isCarona\\\">\\r\\n        <div fxLayoutAlign=\\\"space-between\\\">\\r\\n          <div *ngFor=\\\"let col of driversHeader\\\" fxFlex fxLayoutAlign=\\\"center\\\">\\r\\n            <h4>{{ col }}</h4>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"drivers\\\">\\r\\n          <mat-card *ngFor=\\\"let driver of drivers\\\" class=\\\"vehicle-choice\\\">\\r\\n            <mat-card-content class=\\\"card-container\\\" fxLayout=\\\"column\\\" (click)=\\\"selectDriver(driver.id)\\\"  [ngClass]=\\\"{'selected-option':driver.id === selectedDriver}\\\">\\r\\n              <div fxLayoutAlign=\\\"space-between\\\" fxLayoutGap=\\\"30px\\\">\\r\\n                <div fxFlex fxLayoutAlign=\\\"center space-between\\\">\\r\\n                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                    <p>{{ driver.name }}</p>\\r\\n                  </div>\\r\\n                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                    <p>{{ driver.cpf }}</p>\\r\\n                  </div>\\r\\n                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                    <p>{{ driver.cnh }}</p>\\r\\n                  </div>\\r\\n                  <div fxFlex fxLayoutAlign=\\\"center center\\\">\\r\\n                    <p>{{ driver.registration }}</p>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isCarona\\\" fxLayoutAlign=\\\"center\\\" fxLayout=\\\"column\\\">\\r\\n        <div fxLayoutAlign=\\\"center\\\">\\r\\n          <h1>Essa viagem será alocada como Carona</h1>\\r\\n        </div>\\r\\n        <mat-card class=\\\"full-form-container\\\" fxLayout=\\\"column\\\" *ngIf=\\\"isCarona\\\">\\r\\n          <form fxLayout=\\\"column\\\">\\r\\n            <div fxFlex=\\\"80\\\" fxLayout=\\\"column\\\" fxFlexOffset=\\\"5\\\">\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <mat-form-field fxFlex=\\\"50\\\" fxFlexOffset=\\\"15\\\">\\r\\n                  <input matInput placeholder=\\\"Setor Requisitante\\\" name=\\\"requesterSector2\\\" [(ngModel)]=\\\"model.requesterSector\\\">\\r\\n                </mat-form-field>\\r\\n                <mat-form-field fxFlex=\\\"15\\\" fxFlexOffset=\\\"5\\\">\\r\\n                  <input matInput placeholder=\\\"Data\\\" name=\\\"date2\\\" [(ngModel)]=\\\"formCarona.requestDate\\\" readonly=\\\"true\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n                  <input matInput placeholder=\\\"Destino\\\" name=\\\"destination2\\\" [(ngModel)]=\\\"formCarona.destination\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n                  <textarea matInput placeholder=\\\"Objetivo\\\" name=\\\"purpose2\\\" [(ngModel)]=\\\"formCarona.purpose\\\"></textarea>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <mat-form-field fxFlex=\\\"50\\\" fxFlexOffset=\\\"15\\\">\\r\\n                  <input matInput placeholder=\\\"Nome\\\" name=\\\"name2\\\" [(ngModel)]=\\\"formCarona.name\\\">\\r\\n                </mat-form-field>\\r\\n                <mat-form-field fxFlex=\\\"15\\\" fxFlexOffset=\\\"5\\\">\\r\\n                  <input matInput placeholder=\\\"Telefone\\\" name=\\\"phone2\\\" [(ngModel)]=\\\"formCarona.phone\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <mat-form-field fxFlex=\\\"32\\\" fxFlexOffset=\\\"15\\\">\\r\\n                  <input matInput placeholder=\\\"Data\\\" name=\\\"travelDate2\\\" [(ngModel)]=\\\"formCarona.travelDate\\\" readonly=\\\"true\\\">\\r\\n                </mat-form-field>\\r\\n                <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"5\\\">\\r\\n                  <input matInput placeholder=\\\"Hora da Saída\\\"  name=\\\"departureHour2\\\" [(ngModel)]=\\\"formCarona.departureHour\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <mat-form-field fxFlex=\\\"32\\\" fxFlexOffset=\\\"15\\\">\\r\\n                  <input matInput placeholder=\\\"Regresso Provável\\\" name=\\\"returnDate2\\\" [(ngModel)]=\\\"formCarona.returnDate\\\" readonly=\\\"true\\\">\\r\\n                </mat-form-field>\\r\\n                <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"5\\\">\\r\\n                  <input matInput placeholder=\\\"Hora\\\" name=\\\"returnHour2\\\" [(ngModel)]=\\\"formCarona.returnHour\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <h3 fxFlex=\\\"20\\\" fxFlexOffset=\\\"15\\\">Local de Saída:</h3>\\r\\n                <mat-checkbox fxFlex=\\\"20\\\">Reitoria/UFCG</mat-checkbox>\\r\\n                <mat-checkbox fxFlex=\\\"20\\\">Residência</mat-checkbox>\\r\\n                <mat-checkbox fxFlex=\\\"20\\\">Outros*</mat-checkbox>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n                  <textarea matInput placeholder=\\\"\\\" name=\\\"Address2\\\" [(ngModel)]=\\\"formCarona.address\\\"></textarea>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"15\\\">\\r\\n                  <input matInput placeholder=\\\"Horário de chegada do voo/ônibus\\\" name=\\\"arrivalTime2\\\" [(ngModel)]=\\\"formCarona.arrivalTime\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div fxLayout=\\\"row\\\">\\r\\n                <mat-form-field fxFlex=\\\"32\\\" fxFlexOffset=\\\"15\\\">\\r\\n                  <input matInput placeholder=\\\"Número do voo\\\" name=\\\"flightNumber2\\\" [(ngModel)]=\\\"formCarona.flightNumber\\\">\\r\\n                </mat-form-field>\\r\\n                <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"5\\\">\\r\\n                  <input matInput placeholder=\\\"Empresa\\\" name=\\\"airCompany2\\\" [(ngModel)]=\\\"formCarona.airCompany\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field fxFlex=\\\"33\\\" fxFlexOffset=\\\"15\\\">\\r\\n                  <input matInput placeholder=\\\"Origem da viagem\\\" name=\\\"travelOrigin2\\\" [(ngModel)]=\\\"formCarona.travelOrigin\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div>\\r\\n                <mat-form-field fxFlex=\\\"70\\\" fxFlexOffset=\\\"15\\\">\\r\\n                  <input matInput placeholder=\\\"Setor responsável pelas diárias do motorista\\\" name=\\\"driveSectorResponsability2\\\" [(ngModel)]=\\\"formCarona.driverSectorResponsibility\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n      \\r\\n      <button mat-raised-button matStepperPrevious color=\\\"primary\\\">Voltar</button>\\r\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"signup-btn\\\" (click)=\\\"confirmTravel()\\\">Confirmar</button>\\r\\n    </mat-step>\\r\\n  </mat-horizontal-stepper>\\r\\n  <button class=\\\"mat-button\\\" mat-fab (click)=\\\"openDialog()\\\"><mat-icon>not_interested</mat-icon></button>    \\r\\n</mat-card>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.html\n// module id = ../../../../../src/app/allocation/allocation.component.html\n// module chunks = 12","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".allocation-stepper {\\n  margin-top: 5%; }\\n  .allocation-stepper button {\\n    margin-top: 30px; }\\n\\n.selected-option {\\n  background-color: #d4e4f3; }\\n\\n.vehicle-choice {\\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\\n  padding: 0;\\n  border: 20px;\\n  margin: 15px 0 15px 0; }\\n  .vehicle-choice .mat-expansion-panel-header {\\n    padding: 0 12px 0 12px; }\\n  .vehicle-choice mat-expansion-panel-body {\\n    overflow: hidden; }\\n  .vehicle-choice .vehicle-card:hover {\\n    cursor: pointer; }\\n  .vehicle-choice .img-container {\\n    height: 50px;\\n    padding: 7px 0; }\\n    .vehicle-choice .img-container img {\\n      border-radius: 50%;\\n      height: 50px;\\n      width: 50px; }\\n  .vehicle-choice .mat-checkbox {\\n    margin-left: 4px; }\\n  .vehicle-choice p {\\n    margin: 0;\\n    padding: 24px 0;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap; }\\n\\n.travels-vehicles {\\n  padding: 15px; }\\n  .travels-vehicles:hover {\\n    cursor: pointer; }\\n  .travels-vehicles p {\\n    padding: 2px;\\n    font-size: 14px; }\\n\\n.toolbar-vehicles-travels {\\n  margin-top: 20px; }\\n\\nh4 {\\n  margin: 5px; }\\n\\n.mat-button {\\n  background-color: #E68364;\\n  position: fixed;\\n  bottom: 50px;\\n  right: 30px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.scss\n// module id = ../../../../../src/app/allocation/allocation.component.scss\n// module chunks = 12","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { TravelService } from '../services/travel.service';\r\nimport { FormService } from '../services/form.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { VehicleService } from '../services/vehicle.service';\r\nimport { DriverService } from '../services/driver.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-allocation',\r\n  templateUrl: './allocation.component.html',\r\n  styleUrls: ['./allocation.component.scss']\r\n})\r\nexport class AllocationComponent implements OnInit {\r\n\r\n  protected model: any = {};\r\n  protected isLinear = false;\r\n  protected checked = false;\r\n  protected terminal = false;\r\n  protected id;\r\n\r\n  protected availableVehicles = [];\r\n  protected busyVehicles = [];\r\n  protected travelsByVehicle = [];\r\n  protected vehicles = [];\r\n  protected vehiclesHeader = ['Veículo', 'Placa', 'Marca', 'Capacidade'];\r\n\r\n  protected drivers = [];\r\n  protected driversHeader = ['Nome', 'Cpf', 'Cnh', 'Registro'];\r\n\r\n  protected selectedDriver: number;\r\n  protected selectedVehicle: number;\r\n  protected selectedVehicleAvailable = -1;\r\n  protected selectedVehicleWithTravel: number;\r\n  protected selectedTravel = {};\r\n  protected selectedTravelID = -1;\r\n  protected isCarona = false;\r\n  protected formCarona = {};\r\n\r\n  animal: string;\r\n  name: string;\r\n\r\n  constructor(private travelService: TravelService,\r\n              private route: ActivatedRoute,\r\n              private formService: FormService,\r\n              private vehicleService: VehicleService,\r\n              private driverService: DriverService,\r\n              private snackBar: MatSnackBar,\r\n              private router: Router,\r\n              public dialog: MatDialog) {\r\n                 this.id = this.route.snapshot.params['id'];\r\n               }\r\n\r\n  ngOnInit() {\r\n     this.formService.getById(this.id).subscribe((data) => {\r\n        this.model = data;\r\n        this.model.departureHour = data.departureHour.slice(11);\r\n        this.model.returnHour = data.returnHour.slice(11);\r\n\r\n        this.getVehiclesWithTravels();\r\n        this.getAvailableVehicles();\r\n        this.getAllDrivers();\r\n      }, error => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getAllDrivers() {\r\n    this.driverService.driversObs.subscribe((data) => {\r\n      this.drivers = data;\r\n    });\r\n  }\r\n\r\n  getAvailableVehicles() {\r\n    this.vehicleService.getAvailables(this.id).subscribe((data) => {\r\n      this.availableVehicles = data;\r\n    });\r\n  }\r\n\r\n  getVehiclesWithTravels() {\r\n    this.vehicleService.getVehiclesWithTravels(this.model.travelDate).subscribe((data2) => {\r\n      this.busyVehicles = data2;\r\n    });\r\n  }\r\n\r\n  selectDriver(id: number) {\r\n    this.selectedDriver = id;\r\n  }\r\n\r\n  selectVehicleAvailable(id: number) {\r\n    this.isCarona = false;\r\n    this.selectedVehicleWithTravel = -1;\r\n    this.selectedTravelID = -1;\r\n    this.selectedTravel = {};\r\n    if (this.selectedVehicleAvailable === -1 || this.selectedVehicleAvailable !== id) {\r\n      this.selectedVehicleAvailable = id;\r\n    } else {\r\n      this.selectedVehicleAvailable = -1;\r\n    }\r\n  }\r\n\r\n  selectVehicleWithTravels(id: number) {\r\n    this.isCarona = true;\r\n    this.selectedVehicleAvailable = -1;\r\n    this.selectedVehicleWithTravel = id;\r\n  }\r\n\r\n  updateForm() {\r\n    const id = this.model.id;\r\n    const form = Object.assign({}, this.model);\r\n    form.travelDate += ' ' + form.departureHour;\r\n    form.returnDate += ' ' + form.returnHour;\r\n    form.requestDate += ' ' + form.returnHour;\r\n    form.returnHour = form.returnDate;\r\n    form.departureHour = form.travelDate;\r\n\r\n    this.formService.update(id, form).subscribe((data) => {\r\n      const snackBarRef = this.snackBar.open('Solicitação atualizada!', 'OK', { duration: 5000});\r\n      this.getAvailableVehicles();\r\n      this.getVehiclesWithTravels();\r\n    }, error => {\r\n      const snackBarRef = this.snackBar.open(error.errors[0], 'ENVIAR NOVAMENTE', { duration: 5000});\r\n    });\r\n  }\r\n\r\n  confirmTravel() {\r\n\r\n    let form;\r\n\r\n    if (this.selectedVehicleWithTravel !== -1) {\r\n      if (this.selectedTravelID !== -1) {\r\n        form = {\r\n          formId: +this.id,\r\n          tarvelId: this.selectedTravelID\r\n        };\r\n        this.selectedVehicle = this.selectedVehicleWithTravel;\r\n        this.travelService.ride(form).subscribe(data => {\r\n          const snackBarRef = this.snackBar.open('Solicitação aceita e a carona foi confirmada!', 'OK', { duration: 5000});\r\n          this.router.navigate(['/home/travels']);\r\n        }, error => {\r\n          const snackBarRef = this.snackBar.open(error.errors[0], 'ENVIAR NOVAMENTE', { duration: 5000});\r\n        });\r\n      } else {\r\n        const snackBarRef = this.snackBar.open('A viagem de carona não foi selecionada', 'OK', { duration: 15000});\r\n      }\r\n    } else {\r\n      form = {\r\n        formId: +this.id,\r\n        vehicle: this.selectedVehicle,\r\n        driver: this.selectedDriver\r\n      };\r\n      this.selectedVehicle = this.selectedVehicleAvailable;\r\n      this.travelService.create(form).subscribe(data => {\r\n        const snackBarRef = this.snackBar.open('Solicitação aceita e viagem confirmada!', 'OK', { duration: 5000});\r\n        this.router.navigate(['/home/travels']);\r\n      }, error => {\r\n        const snackBarRef = this.snackBar.open(error.errors[0], 'ENVIAR NOVAMENTE', { duration: 5000});\r\n      });\r\n    }\r\n  }\r\n\r\n  changeDeparturePoint(point: string) {\r\n    if (point !== this.model.departurePoint) {\r\n      this.model.departurePoint = point;\r\n    }\r\n  }\r\n\r\n  removeForm(id: number) {\r\n    this.formService.deleteById(id).subscribe(data => {\r\n      const snackBarRef = this.snackBar.open('Formulário removido com sucesso!', 'OK', { duration: 5000});\r\n      this.router.navigate(['/home/solicitations']);\r\n    }, error => {\r\n      const snackBarRef = this.snackBar.open(error.errors[0], 'ENVIAR NOVAMENTE', { duration: 5000});\r\n    });\r\n  }\r\n\r\n  showTravels(id: number) {\r\n    this.travelsByVehicle = [];\r\n    this.vehicleService.getTravelsFromVehicles(id, this.model.travelDate).subscribe((data) => {\r\n      this.travelsByVehicle = data;\r\n    });\r\n  }\r\n\r\n  selectTravel(travel: object, id: number, model: object) {\r\n    if (this.selectedTravelID === -1) {\r\n      this.formCarona = model;\r\n      this.selectedTravel = travel;\r\n      this.selectedTravelID = id;\r\n    } else {\r\n      this.selectedTravelID = -1;\r\n      this.formCarona = {};\r\n      this.selectedTravel = {};\r\n    }\r\n  }\r\n\r\n  deniedForm(justification: string) {\r\n    const form = {\r\n      justificationDeniel: justification\r\n    };\r\n    this.formService.denied(this.id, form).subscribe((data) => {\r\n      const snackBarRef = this.snackBar.open('Solicitação foi bloqueada!', 'OK', { duration: 5000});\r\n      this.router.navigate(['/home/solicitations']);\r\n    }, error => {\r\n      const snackBarRef = this.snackBar.open(error.errors[0], 'ENVIAR NOVAMENTE', { duration: 5000});\r\n    });\r\n  }\r\n\r\n  openDialog(): void {\r\n    const deniedJustification = prompt('Qual o motivo de bloquear esta solicitação?');\r\n    if (deniedJustification !== null) {\r\n      this.deniedForm(deniedJustification);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/brenos/Videos/mob/src/app/allocation/allocation.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AllocationComponent } from './allocation.component';\r\nimport { MatStepperModule } from '@angular/material';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { allocationRouting } from './allocation.routing';\r\nimport { TravelService } from '../services/travel.service';\r\nimport { FormService } from '../services/form.service';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { VehicleService } from '../services/vehicle.service';\r\nimport { DriverService } from '../services/driver.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatStepperModule,\r\n    SharedModule,\r\n    allocationRouting,\r\n    FormsModule\r\n  ],\r\n  declarations: [AllocationComponent],\r\n  providers: [\r\n    TravelService,\r\n    FormService,\r\n    VehicleService,\r\n    DriverService\r\n  ]\r\n})\r\nexport class AllocationModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/brenos/Videos/mob/src/app/allocation/allocation.module.ts","import { RouterModule, Routes } from '@angular/router';\r\nimport { AllocationComponent } from './allocation.component';\r\nimport { ModuleWithProviders } from '@angular/core';\r\n\r\nconst allocationRoutes: Routes = [\r\n    {\r\n        path: '', component: AllocationComponent\r\n    }\r\n];\r\n\r\nexport const allocationRouting: ModuleWithProviders = RouterModule.forChild(allocationRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/brenos/Videos/mob/src/app/allocation/allocation.routing.ts"],"sourceRoot":"webpack:///"}